<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

namespace common\modules\article\controllers;

use Yii;
use yii\web\Controller;
use common\modules\article\models\TagSearch;
use yii\helpers\ArrayHelper;
use kartik\grid\EditableColumnAction;
use common\modules\article\models\Tag;

/**
 * Description of TagController
 *
 * @author Custom
 */
class TagController extends Controller {

    public function actionIndex() // TODO1: нужно убрать лишние комменты
    {
    // your default model and dataProvider generated by gii
        $searchModel = new TagSearch;
        $dataProvider = $searchModel->search(Yii::$app->request->getQueryParams());

        // validate if there is a editable input saved via AJAX
        if (Yii::$app->request->post('hasEditable')) { // TODO1: лишний кусок кода. Насколько я понял, он вообще никогда не будет выполнен, потому что редактирвоание в отдельный метод вынесено
            // instantiate your book model for saving
            $tagId = Yii::$app->request->post('editableKey');
            $model = Tag::findOne($tagId);

            // store a default json response as desired by editable
            $out = Json::encode(['output'=>'', 'message'=>'']);

            // fetch the first entry in posted data (there should only be one entry
            // anyway in this array for an editable submission)
            // - $posted is the posted data for Book without any indexes
            // - $post is the converted array for single model validation
            $posted = current($_POST['Book']); ///!!!
            $post = ['Book' => $posted];

            // load model like any single model validation
            if ($model->load($post)) {
            // can save model or do something before saving model
            $model->save();

            // custom output to return to be displayed as the editable grid cell
            // data. Normally this is empty - whereby whatever value is edited by
            // in the input by user is updated automatically.
            $output = '';

            // similarly you can check if the name attribute was posted as well
            // if (isset($posted['name'])) {
            // $output = ''; // process as you need
            // }
            $out = Json::encode(['output'=>$output, 'message'=>'']);
            }
            // return ajax json encoded response and exit
            echo $out;
            return;
        }

        // non-ajax - render the grid by default
        return $this->render('index', [
            'dataProvider' => $dataProvider,
            'searchModel' => $searchModel
        ]);

    }

   public function actions() {
       return ArrayHelper::merge(parent::actions(), [
           'editTag' => [
                'class' => EditableColumnAction::className(),     // TODO1: поменять на className на class
                'modelClass' => Tag::className(),                // TODO1: поменять на className на class
                'outputValue' => function (){}
               ]
        ]);
    }

    public function actionDeletetag(){

        $id = Yii::$app->request->post('id');
        $model = Tag::findOne($id);
        $model->delete();

        return $this->redirect(['index']);
    }
}
